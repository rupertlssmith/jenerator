/*
 * TestConfig is an implementation of the Generator interface, that creates a test configuration
 * suitable for running the JUnit tests from.
 */
group TestConfig : JavaCommon implements Generator;

/*
 * Creates the opening section of an output file, if one is required.
 */
file_open(catalogue, package) ::= <<
\<configBeans xmlns="http://thebadgerset.co.uk/config-beans-0.1"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://thebadgerset.co.uk/config-beans-0.1 config-beans.xsd"\>

  \<jndiConfig\>
    \<property name="java.naming.factory.initial" value="com.thesett.common.jndi.SimpleInitialContextFactory"/\>
  \</jndiConfig\>

  \<!-- Set up the mode config bean to use development mode. --\>
  \<beanSetup beanClassName="com.thesett.catalogue.config.ModeConfigBean"\>
    \<setUpProperty name="devMode" value="true"/\>
  \</beanSetup\>

  \<!-- Set up the loader config bean to load the test catalogue model. --\>
  \<beanSetup beanClassName="com.thesett.catalogue.config.ModelLoaderConfigBean"\>
    \<setUpProperty name="modelResource" value="test-catalogue.xml"/\>
  \</beanSetup\>

  \<!-- Set up the hibernate config bean to configure hibernate on the generated mapping for the model. --\>
  \<beanSetup beanClassName="com.thesett.catalogue.config.HibernateConfigBean"\>
    \<setUpProperty name="mappingResource" value="test-catalogue.hbm.xml"/\>
    \<!-- The same hibernate properties are used for the catalogue config bean and manager service. --\>
    \<setUpProperty name="propertiesResource" value="test-hibernate.properties"/\>
    \<setUpProperty name="secondaryPropertiesResource" value="test-hibernate.properties"/\>
  \</beanSetup\>

  \<!-- Set up the index config bean to prepare the index for handling the test model. --\>
  \<beanSetup beanClassName="com.thesett.index.config.IndexStoreConfigBean"\>
    \<setUpProperty name="resourceName" value="test-index-config.xml"/\>
  \</beanSetup\>

  \<!-- Set up the catalogue config bean to prepare the catalogue and check the model against the database. --\>
  \<beanSetup beanClassName="com.thesett.catalogue.config.CatalogueConfigBeanImpl"\>
    \<setUpProperty name="modelPackage" value="com.thesett.catalogue.example"/\>
  \</beanSetup\>

\</configBeans>
>>

/*
 * Generates the output for a bean in the specified catalogue.
 */
for_bean(catalogue, package, decorator, fields, extraFields) ::= <<
>>

/*
 * Creates the closing section of an output file, if one is required.
 */
file_close() ::= <<
>>